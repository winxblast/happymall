<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="top.winxblast.happymall" annotation-config="true"/>

    <!--将配置Spring的一些常量分离到配置文件中-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <!--dbcp连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!--连接池启动时的初始值-->
        <property name="initialSize" value="${db.initialSize}"/>
        <!--连接池的最大值-->
        <property name="maxActive" value="${db.maxActive}"/>
        <!--最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的
        连接慢慢释放一部分，一直减小到maxIdle为止-->
        <property name="maxIdle" value="${db.maxIdel}"/>
        <!--最小空闲值，当空闲的连接数少于阈值时，连接池就会预申请一些连接，
        以免洪峰来时来不及申请-->
        <property name="minIdle" value="${db.minIdel}"/>
        <!--最大建立连接等待时间。如果超过此时间将接到异常。设为1表示无限制-->
        <property name="maxWait" value="${db.maxWait}"/>
        <!--#给出一条简单的sql语句进行验证 -->
        <!--<property name="validationQuery" value="select getdate()" />-->

        <!--自动提交事务-->
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>

        <!-- 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 -->
        <!--<property name="removeAbandoned" value="true" />-->
        <!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
        <!--<property name="removeAbandonedTimeout" value="120" />-->

        <!--连接的超时时间，默认为半小时-->
        <property name="minEvictableIdleTimeMillis"
                  value="${db.minEvictableIdleTimeMillis}"/>

        <!--失效检查线程运行时间间隔，要小于MySQL默认-->
        <property name="timeBetweenEvictionRunsMillis" value="40000"/>
        <!--检查连接是否有效的SQL语句-->
        <property name="testWhileIdle" value="true"/>
        <!--检查连接有效性的SQL语句-->
        <property name="validationQuery" value="SELECT 1 FROM dual"/>
    </bean>

    <bean id="sqlSessionFacory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--把上面那个bean装入-->
        <property name="dataSource" ref="dataSource"/>
        <!--关于classpath classpath*:的出现是为了从多个jar文件中加载相同的文件
        classpath:只能加载找到的第一个文件，具体的请再次搜索-->
        <!--把mybatis配置都读到-->
        <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml"/>

        <!--分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!--配置方言-->
                        <value>dialect=mysql</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--扫描dao层接口的包-->
    <bean name="mapperScannerConfigurer"
          class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="top.winxblast.happymall.dao"/>
    </bean>

    <!--使用@Transactional进行声明式事务管理需要声明下面这行-->
    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true"/>
    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>

</beans>