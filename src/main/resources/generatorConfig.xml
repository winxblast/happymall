<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置，就是把一些配置${}放到这个文件中datasource.properties-->
    <properties resource="datasource.properties"/>

    <!--指定特定数据库的jdbc驱动jar包的位置-->
    <classPathEntry location="${db.driverLocation}"/>

    <context id="default" targetRuntime="MyBatis3">

        <!--optional，旨在创建class时，对注释进行控制-->
        <commentGenerator>
            <property name="supressDate" value="true"/>
            <property name="supressAllComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接-->
        <jdbcConnection
                driverClass="${db.driverClassName}"
                connectionURL="${db.url}"
                userId="${db.username}"
                password="${db.password}">
        </jdbcConnection>

        <!--非必须，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>


        <!--Model模型生成器，用来生成含有主键key的类，记录类以及查询Example类
            targetPackage  指定生成的model生成所在的包名
            targetProject  指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="top.winxblast.happymall.pojo"
                            targetProject="./src/main/java">
            <!--是否允许子包，即targetPackage.schemaName.tableName-->
            <property name="enableSubPackages" value="false"/>
            <!--是否对model添加构造函数-->
            <property name="constructorBased" value="true"/>
            <!--是否对类CHAR类型的列的数据进行trim操作-->
            <property name="trimString" value="true"/>
            <!--建立的Model对象是否不可改变，true即生成的
            Model对象不会有setter方法，只有构造方法-->
            <property name="immutable" value="false"/>
        </javaModelGenerator>


        <!--mapper映射文件生成所在的目录
        为每一个数据库的表生成对应的SqlMap文件-->
        <!--生成目标xml文件，即接口实现文件-->
        <sqlMapGenerator targetPackage="mappers"
                         targetProject="./src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        
        <!--客户端代码，生成易于使用的针对Model对象和xml配置文件的代码
                type="ANNOTATEDMAPPER",生成Java Model
                和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model
                和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <!--targetPackage: mapper接口dao生成的位置-->
        <javaClientGenerator type="XMLMAPPER" 
                             targetPackage="top.winxblast.happymall.dao" 
                             targetProject="./src/main/java">
            <!--enableSubPackages:是否让schema作为包的后缀-->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>


        <!-- tableName和数据库中表的名字保持一致，domainObjectName表示
         生成Java类的类名；enableCountByExample表示是否可以通过这个对象查它
         的数量；enableUpdateByExample表示是否可以通过这个对象update；
         这里这些都采用默认-->
        <table tableName="happymall_shipping" domainObjectName="Shipping"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <table tableName="happymall_cart" domainObjectName="Cart"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <!--这个表比较奇怪，之前没有在数据库中添加，
        后来靠插件也没有生成，可能老师有什么遗漏-->
        <table tableName="happymall_cart_item" domainObjectName="CartItem"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <table tableName="happymall_category" domainObjectName="Category"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <table tableName="happymall_order" domainObjectName="Order"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <table tableName="happymall_order_item" domainObjectName="OrderItem"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <table tableName="happymall_pay_info" domainObjectName="PayInfo"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        <table tableName="happymall_product" domainObjectName="Product"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <!--这两个字段在数据库中都是用text的，mybatis不同版本生成的会不一样
            所以就都转化成VARCHAR-->
            <columnOverride column="detail" jdbcType="VARCHAR"/>
            <columnOverride column="sub_images" jdbcType="VARCHAR"/>
        </table>

        <table tableName="happymall_user" domainObjectName="User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>

        
    </context>
</generatorConfiguration>



